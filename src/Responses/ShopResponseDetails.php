<?php
declare(strict_types=1);

namespace Externet\EpsBankTransfer\Responses;

use Externet\EpsBankTransfer\Generated\Payment\V26\ShopConfirmationDetails;
use Externet\EpsBankTransfer\Generated\Protocol\V26\EpsProtocolDetails;

class ShopResponseDetails
{
    /** @var string Human-readable error message provided by the shop, if any */
    public $errorMessage;

    /** @var string Session identifier generated by the bank */
    public $sessionId;

    /** @var string Status code of the EPS transaction as returned by the bank */
    public $statusCode;

    /** @var string Bank-generated payment reference identifier */
    public $paymentReferenceIdentifier;

    public function buildShopResponseDetails(): EpsProtocolDetails
    {
        $epsProtocolDetails = new EpsProtocolDetails();
        $shopResponseDetails = new \Externet\EpsBankTransfer\Generated\Protocol\V26\ShopResponseDetails();

        if (!empty($this->errorMessage)) {
            $shopResponseDetails->setErrorMsg($this->errorMessage);
            if (!empty($this->sessionId)) {
                $shopResponseDetails->setSessionId($this->sessionId);
            }
        } else {
            $shopResponseDetails->setSessionId($this->sessionId);

            $shopConfirmationDetails = new ShopConfirmationDetails();
            $shopConfirmationDetails->setStatusCode($this->statusCode);
            $shopConfirmationDetails->setPaymentReferenceIdentifier($this->paymentReferenceIdentifier);
            $shopResponseDetails->setShopConfirmationDetails($shopConfirmationDetails);
        }

        $epsProtocolDetails->setShopResponseDetails($shopResponseDetails);
        return $epsProtocolDetails;
    }

    /**
     * @param string $statusCode
     */
    public function setStatusCode(string $statusCode): void
    {
        $this->statusCode = $statusCode;
    }

    /**
     * @param string $sessionId
     */
    public function setSessionId(string $sessionId): void
    {
        $this->sessionId = $sessionId;
    }

    /**
     * @param string $paymentReferenceIdentifier
     */
    public function setPaymentReferenceIdentifier(string $paymentReferenceIdentifier): void
    {
        $this->paymentReferenceIdentifier = $paymentReferenceIdentifier;
    }

    /**
     * @param string $errorMessage
     */
    public function setErrorMessage(string $errorMessage): void
    {
        $this->errorMessage = $errorMessage;
    }
}